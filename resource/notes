Java String hashCode() and 31

This is because 31 has a nice property – it's multiplication can be replaced by a bitwise shift which is faster than the standard multiplication:
Умножение на простое нечётное число 31 используется для уменьшения числа коллизий,
т.е.чтобы разнообразие рассчитываемых хэш - кодов было как можно больше
31 * i == (i << 5) - i

Контракт между equals() и hashcode()

1) Если два объекта равны (т. е. метод equals() возвращает true), у них должен быть одинаковый хэш-код.
2) Если метод hashCode() вызывается несколько раз на одном и том же объекте, каждый раз он должен возвращать одно и то же число.
3) Одинаковый хэш-код может быть у двух разных объектов.
